{
    "openapi": "3.0.0",
    "info": {
        "title": "FoodHub API",
        "description": "Multi-channel SaaS platform for restaurants - API Documentation",
        "contact": {
            "email": "admin@foodhub.uz"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost",
            "description": "FoodHub API Server"
        }
    ],
    "paths": {
        "/api/v1/auth/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user",
                "operationId": "b9e746d77661fb8df55d0ac63e1ece77",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "+998901234567"
                                    },
                                    "restaurant_id": {
                                        "type": "integer",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User registered successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "user": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "John Doe"
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "example": "john@example.com"
                                                        },
                                                        "phone": {
                                                            "type": "string",
                                                            "example": "+998901234567"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "token": {
                                                    "type": "string",
                                                    "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9..."
                                                },
                                                "token_type": {
                                                    "type": "string",
                                                    "example": "Bearer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/auth/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User login",
                "operationId": "a7997e7c1e3bfed64d4e56de82415931",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Login successful"
                                        },
                                        "data": {
                                            "properties": {
                                                "user": {
                                                    "type": "object"
                                                },
                                                "token": {
                                                    "type": "string",
                                                    "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9..."
                                                },
                                                "token_type": {
                                                    "type": "string",
                                                    "example": "Bearer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/auth/me": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Get authenticated user profile",
                "operationId": "37d33f0281f67d31d05b4c45eea0143b",
                "responses": {
                    "200": {
                        "description": "User profile retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "john@example.com"
                                                },
                                                "phone": {
                                                    "type": "string",
                                                    "example": "+998901234567"
                                                },
                                                "restaurant": {
                                                    "type": "object"
                                                },
                                                "roles": {
                                                    "type": "array",
                                                    "items": {}
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/auth/profile": {
            "put": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Update authenticated user profile",
                "operationId": "32110a28f8df36453a3e40f44baf10ad",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "+998901234567"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "restaurant_id": {
                                        "description": "Only for super-admin or restaurant owners",
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Profile updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Profile updated successfully"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Insufficient permissions"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/auth/password": {
            "put": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Change current user password",
                "operationId": "30a20251dd3efc50dc67a49d47f9ac3c",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "current_password",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "current_password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "oldpassword123"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "newpassword123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "newpassword123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password changed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Password changed successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error - incorrect current password"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/auth/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout user",
                "operationId": "f6b8957b4c0b25636613a9f0512a8ba9",
                "responses": {
                    "200": {
                        "description": "Logged out successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Logged out successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/auth/refresh": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Refresh authentication token",
                "operationId": "c42c3cd7fd7fe0dbd5bcc42962059e90",
                "responses": {
                    "200": {
                        "description": "Token refreshed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Token refreshed successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "token": {
                                                    "type": "string",
                                                    "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9..."
                                                },
                                                "token_type": {
                                                    "type": "string",
                                                    "example": "Bearer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/categories": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get list of categories",
                "operationId": "e225c2b7eb5daf7fb16e00f4f07ff030",
                "parameters": [
                    {
                        "name": "restaurant_id",
                        "in": "query",
                        "description": "Filter by restaurant ID",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Categories retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Categories retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "name": {
                                                                "type": "object",
                                                                "example": {
                                                                    "en": "Pizza",
                                                                    "ru": "Пицца",
                                                                    "uz": "Pizza"
                                                                }
                                                            },
                                                            "slug": {
                                                                "type": "string",
                                                                "example": "pizza"
                                                            },
                                                            "description": {
                                                                "type": "object"
                                                            },
                                                            "restaurant": {
                                                                "type": "object"
                                                            },
                                                            "products_count": {
                                                                "type": "integer",
                                                                "example": 5
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Categories"
                ],
                "summary": "Create a new category",
                "operationId": "dd76b8d73b7ea8b4951f03d7c0904c92",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "restaurant_id",
                                    "name"
                                ],
                                "properties": {
                                    "restaurant_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "name": {
                                        "required": [
                                            "en",
                                            "ru",
                                            "uz"
                                        ],
                                        "properties": {
                                            "en": {
                                                "type": "string",
                                                "example": "Pizza"
                                            },
                                            "ru": {
                                                "type": "string",
                                                "example": "Пицца"
                                            },
                                            "uz": {
                                                "type": "string",
                                                "example": "Pizza"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "description": {
                                        "properties": {
                                            "en": {
                                                "type": "string",
                                                "example": "Fresh baked pizza"
                                            },
                                            "ru": {
                                                "type": "string",
                                                "example": "Свежая выпечка пиццы"
                                            },
                                            "uz": {
                                                "type": "string",
                                                "example": "Yangi pishirilgan pizza"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "image_url": {
                                        "type": "string",
                                        "format": "url",
                                        "example": "https://example.com/pizza.jpg"
                                    },
                                    "sort_order": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Category created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Category created successfully"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/categories/{id}": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get category details",
                "operationId": "9c4934d1b68a6d4440ec72cfc8ae7074",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Category ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Category retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "object"
                                                },
                                                "description": {
                                                    "type": "object"
                                                },
                                                "restaurant": {
                                                    "type": "object"
                                                },
                                                "products": {
                                                    "type": "array",
                                                    "items": {}
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found"
                    }
                }
            }
        },
        "/api/v1/menus": {
            "get": {
                "tags": [
                    "Menus"
                ],
                "summary": "Get list of menus",
                "operationId": "4512a8cf3e47b6bbb48efa21ad1005e0",
                "parameters": [
                    {
                        "name": "restaurant_id",
                        "in": "query",
                        "description": "Filter by restaurant ID",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "channel",
                        "in": "query",
                        "description": "Filter by channel",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "web",
                                "mobile",
                                "telegram",
                                "whatsapp",
                                "phone",
                                "pos"
                            ],
                            "example": "web"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Filter by menu type",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "main",
                                "breakfast",
                                "lunch",
                                "dinner",
                                "drinks",
                                "desserts",
                                "seasonal"
                            ],
                            "example": "main"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Menus retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Menus retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "name": {
                                                                "type": "object",
                                                                "example": {
                                                                    "en": "Main Menu",
                                                                    "ru": "Основное меню",
                                                                    "uz": "Asosiy menyu"
                                                                }
                                                            },
                                                            "type": {
                                                                "type": "string",
                                                                "example": "main"
                                                            },
                                                            "channels": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "restaurant": {
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Menus"
                ],
                "summary": "Create a new menu",
                "operationId": "70898b64abbfbbd24bb791f350e431f1",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "restaurant_id",
                                    "name",
                                    "type",
                                    "channels"
                                ],
                                "properties": {
                                    "restaurant_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "name": {
                                        "type": "object",
                                        "example": {
                                            "en": "Main Menu",
                                            "ru": "Основное меню",
                                            "uz": "Asosiy menyu"
                                        }
                                    },
                                    "description": {
                                        "type": "object",
                                        "example": {
                                            "en": "Our main menu",
                                            "ru": "Наше основное меню",
                                            "uz": "Bizning asosiy menyumiz"
                                        }
                                    },
                                    "type": {
                                        "type": "string",
                                        "enum": [
                                            "main",
                                            "breakfast",
                                            "lunch",
                                            "dinner",
                                            "drinks",
                                            "desserts",
                                            "seasonal"
                                        ],
                                        "example": "main"
                                    },
                                    "channels": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "enum": [
                                                "web",
                                                "mobile",
                                                "telegram",
                                                "whatsapp",
                                                "phone",
                                                "pos"
                                            ]
                                        }
                                    },
                                    "availability_hours": {
                                        "type": "object"
                                    },
                                    "sort_order": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Menu created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Menu created successfully"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/restaurants/{restaurant_slug}/menus": {
            "get": {
                "tags": [
                    "Menus"
                ],
                "summary": "Get menus for specific restaurant",
                "operationId": "59c427eaac53a2be4fe7bb0a7d4889f6",
                "parameters": [
                    {
                        "name": "restaurant_slug",
                        "in": "path",
                        "description": "Restaurant slug",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "pizza-palace"
                        }
                    },
                    {
                        "name": "channel",
                        "in": "query",
                        "description": "Filter by channel",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "web",
                                "mobile",
                                "telegram",
                                "whatsapp",
                                "phone",
                                "pos"
                            ],
                            "example": "web"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Restaurant menus retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Restaurant menus retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "restaurant": {
                                                    "type": "object"
                                                },
                                                "menus": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "name": {
                                                                "type": "object"
                                                            },
                                                            "products": {
                                                                "type": "array",
                                                                "items": {}
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/menus/{id}": {
            "get": {
                "tags": [
                    "Menus"
                ],
                "summary": "Get menu details with products",
                "operationId": "8c0d54161361f4fe73878816aaf255fa",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Menu ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "channel",
                        "in": "query",
                        "description": "Filter products by channel",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "web",
                                "mobile",
                                "telegram",
                                "whatsapp",
                                "phone",
                                "pos"
                            ],
                            "example": "web"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Menu retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Menu retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "object"
                                                },
                                                "description": {
                                                    "type": "object"
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "example": "main"
                                                },
                                                "restaurant": {
                                                    "type": "object"
                                                },
                                                "products": {
                                                    "type": "array",
                                                    "items": {}
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Menu not found"
                    }
                }
            }
        },
        "/api/v1/orders": {
            "get": {
                "tags": [
                    "Orders"
                ],
                "summary": "Get list of orders",
                "operationId": "00d3856d2d3d93124e0cc021d0cb5b79",
                "parameters": [
                    {
                        "name": "restaurant_id",
                        "in": "query",
                        "description": "Filter by restaurant ID",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by order status",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "pending",
                                "confirmed",
                                "preparing",
                                "ready",
                                "out_for_delivery",
                                "delivered",
                                "cancelled"
                            ],
                            "example": "pending"
                        }
                    },
                    {
                        "name": "channel",
                        "in": "query",
                        "description": "Filter by channel",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "web",
                                "mobile",
                                "telegram",
                                "whatsapp",
                                "phone",
                                "pos"
                            ],
                            "example": "web"
                        }
                    },
                    {
                        "name": "date_from",
                        "in": "query",
                        "description": "Filter orders from date",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2024-01-01"
                        }
                    },
                    {
                        "name": "date_to",
                        "in": "query",
                        "description": "Filter orders to date",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2024-12-31"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Orders retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Orders retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "order_number": {
                                                                "type": "string",
                                                                "example": "PIZ-000001"
                                                            },
                                                            "status": {
                                                                "type": "string",
                                                                "example": "pending"
                                                            },
                                                            "total_amount": {
                                                                "type": "string",
                                                                "example": "23.98"
                                                            },
                                                            "restaurant": {
                                                                "type": "object"
                                                            },
                                                            "user": {
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Orders"
                ],
                "summary": "Create a new order",
                "operationId": "79da0a1adcc617490783dfd61927ff56",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "restaurant_id",
                                    "channel",
                                    "customer_info",
                                    "delivery_info",
                                    "items"
                                ],
                                "properties": {
                                    "restaurant_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "channel": {
                                        "type": "string",
                                        "enum": [
                                            "web",
                                            "mobile",
                                            "telegram",
                                            "whatsapp",
                                            "phone",
                                            "pos"
                                        ],
                                        "example": "web"
                                    },
                                    "customer_info": {
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "example": "John Doe"
                                            },
                                            "phone": {
                                                "type": "string",
                                                "example": "+998901234567"
                                            },
                                            "email": {
                                                "type": "string",
                                                "example": "john@example.com"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "delivery_info": {
                                        "properties": {
                                            "type": {
                                                "type": "string",
                                                "enum": [
                                                    "delivery",
                                                    "pickup"
                                                ],
                                                "example": "pickup"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "items": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "product_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "quantity": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "modifiers": {
                                                    "type": "array",
                                                    "items": {}
                                                },
                                                "special_instructions": {
                                                    "type": "string",
                                                    "example": "No onions"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "notes": {
                                        "type": "string",
                                        "example": "Please call when ready"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Order created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Order created successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "order_number": {
                                                    "type": "string",
                                                    "example": "PIZ-000001"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "pending"
                                                },
                                                "total_amount": {
                                                    "type": "string",
                                                    "example": "23.98"
                                                },
                                                "currency": {
                                                    "type": "string",
                                                    "example": "USD"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/orders/{id}": {
            "get": {
                "tags": [
                    "Orders"
                ],
                "summary": "Get order details",
                "operationId": "b2f9845bf9fe11158e0e43f1dd0c5802",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Order ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Order retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "order_number": {
                                                    "type": "string",
                                                    "example": "PIZ-000001"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "pending"
                                                },
                                                "total_amount": {
                                                    "type": "string",
                                                    "example": "23.98"
                                                },
                                                "items": {
                                                    "type": "array",
                                                    "items": {}
                                                },
                                                "restaurant": {
                                                    "type": "object"
                                                },
                                                "user": {
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Order not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/orders/{id}/status": {
            "put": {
                "tags": [
                    "Orders"
                ],
                "summary": "Update order status",
                "operationId": "ffcedd22a7193b60d15f192c74e4035d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Order ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "status"
                                ],
                                "properties": {
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "pending",
                                            "confirmed",
                                            "preparing",
                                            "ready",
                                            "out_for_delivery",
                                            "delivered",
                                            "cancelled"
                                        ],
                                        "example": "confirmed"
                                    },
                                    "cancellation_reason": {
                                        "type": "string",
                                        "example": "Customer request"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Order status updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Order status updated successfully"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/products": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get list of products",
                "operationId": "1ce27f90dd8c39cea9520bf45d58c7c2",
                "parameters": [
                    {
                        "name": "restaurant_id",
                        "in": "query",
                        "description": "Filter by restaurant ID",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "category_id",
                        "in": "query",
                        "description": "Filter by category ID",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "channel",
                        "in": "query",
                        "description": "Filter by channel",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "web",
                                "mobile",
                                "telegram",
                                "whatsapp",
                                "phone",
                                "pos"
                            ],
                            "example": "web"
                        }
                    },
                    {
                        "name": "featured",
                        "in": "query",
                        "description": "Show only featured products",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "example": false
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search by product name or SKU",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "pizza"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Products retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Products retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "name": {
                                                                "type": "object",
                                                                "example": {
                                                                    "en": "Margherita Pizza",
                                                                    "ru": "Пицца Маргарита",
                                                                    "uz": "Margarita Pizza"
                                                                }
                                                            },
                                                            "prices": {
                                                                "type": "object",
                                                                "example": {
                                                                    "web": 12.99,
                                                                    "mobile": 12.99
                                                                }
                                                            },
                                                            "restaurant": {
                                                                "type": "object"
                                                            },
                                                            "category": {
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Products"
                ],
                "summary": "Create a new product",
                "operationId": "acaa0d3fdc74fd4b534e70fc016cf7f1",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "restaurant_id",
                                    "category_id",
                                    "name",
                                    "type",
                                    "prices",
                                    "channels"
                                ],
                                "properties": {
                                    "restaurant_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "category_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "name": {
                                        "required": [
                                            "en",
                                            "ru",
                                            "uz"
                                        ],
                                        "properties": {
                                            "en": {
                                                "type": "string",
                                                "example": "Margherita Pizza"
                                            },
                                            "ru": {
                                                "type": "string",
                                                "example": "Пицца Маргарита"
                                            },
                                            "uz": {
                                                "type": "string",
                                                "example": "Margarita Pizza"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "description": {
                                        "properties": {
                                            "en": {
                                                "type": "string",
                                                "example": "Classic pizza with tomato and mozzarella"
                                            },
                                            "ru": {
                                                "type": "string",
                                                "example": "Классическая пицца с томатами и моцареллой"
                                            },
                                            "uz": {
                                                "type": "string",
                                                "example": "Pomidor va mozzarella bilan klassik pizza"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": {
                                        "type": "string",
                                        "enum": [
                                            "simple",
                                            "combo",
                                            "modifier"
                                        ],
                                        "example": "simple"
                                    },
                                    "prices": {
                                        "type": "object",
                                        "example": {
                                            "web": 12.99,
                                            "mobile": 12.99,
                                            "pos": 11.99
                                        }
                                    },
                                    "channels": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "enum": [
                                                "web",
                                                "mobile",
                                                "telegram",
                                                "whatsapp",
                                                "phone",
                                                "pos"
                                            ]
                                        }
                                    },
                                    "sku": {
                                        "type": "string",
                                        "example": "PIZZA-001"
                                    },
                                    "images": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "url"
                                        }
                                    },
                                    "calories": {
                                        "type": "integer",
                                        "example": 250
                                    },
                                    "allergens": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "ingredients": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Product created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Product created successfully"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/restaurants/{restaurant_slug}/products": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get products for specific restaurant",
                "operationId": "eeaf44a11a7a4c1751382b1839d9745f",
                "parameters": [
                    {
                        "name": "restaurant_slug",
                        "in": "path",
                        "description": "Restaurant slug",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "pizza-palace"
                        }
                    },
                    {
                        "name": "channel",
                        "in": "query",
                        "description": "Filter by channel",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "web",
                                "mobile",
                                "telegram",
                                "whatsapp",
                                "phone",
                                "pos"
                            ],
                            "example": "web"
                        }
                    },
                    {
                        "name": "category_id",
                        "in": "query",
                        "description": "Filter by category ID",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Restaurant products retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Restaurant products retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "restaurant": {
                                                    "type": "object"
                                                },
                                                "products": {
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/products/{id}": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get product details",
                "operationId": "249e765b6489191fb8167474db8867f7",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Product ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "channel",
                        "in": "query",
                        "description": "Channel for pricing",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "web",
                                "mobile",
                                "telegram",
                                "whatsapp",
                                "phone",
                                "pos"
                            ],
                            "example": "web"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Product retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "object"
                                                },
                                                "description": {
                                                    "type": "object"
                                                },
                                                "current_price": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 12.99
                                                },
                                                "restaurant": {
                                                    "type": "object"
                                                },
                                                "category": {
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found"
                    }
                }
            }
        },
        "/api/v1/restaurants": {
            "get": {
                "tags": [
                    "Restaurants"
                ],
                "summary": "Get list of restaurants",
                "operationId": "35681c199841c61d9d44b21c7fdbdf37",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Restaurants retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Restaurants retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "Pizza Palace"
                                                            },
                                                            "slug": {
                                                                "type": "string",
                                                                "example": "pizza-palace"
                                                            },
                                                            "description": {
                                                                "type": "string",
                                                                "example": "Best pizza in town"
                                                            },
                                                            "address": {
                                                                "type": "object"
                                                            },
                                                            "phone": {
                                                                "type": "string",
                                                                "example": "+998901234567"
                                                            },
                                                            "currency": {
                                                                "type": "string",
                                                                "example": "USD"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Restaurants"
                ],
                "summary": "Create a new restaurant",
                "operationId": "4e4cd6b075f305431cb90767bdc66e64",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Pizza Palace"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Best pizza in town"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "+998901234567"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "info@pizzapalace.uz"
                                    },
                                    "address": {
                                        "type": "object",
                                        "example": {
                                            "street": "Main Street 123",
                                            "city": "Tashkent",
                                            "country": "Uzbekistan"
                                        }
                                    },
                                    "latitude": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 41.2995
                                    },
                                    "longitude": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 69.2401
                                    },
                                    "currency": {
                                        "type": "string",
                                        "example": "USD"
                                    },
                                    "languages": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "example": [
                                            "en",
                                            "ru",
                                            "uz"
                                        ]
                                    },
                                    "business_hours": {
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Restaurant created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Restaurant created successfully"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/restaurants/{id}": {
            "get": {
                "tags": [
                    "Restaurants"
                ],
                "summary": "Get restaurant details",
                "operationId": "03c0e06a9bc8a971397b05e405d65728",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Restaurant ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Restaurant retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Restaurant retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Pizza Palace"
                                                },
                                                "slug": {
                                                    "type": "string",
                                                    "example": "pizza-palace"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Best pizza in town"
                                                },
                                                "address": {
                                                    "type": "object"
                                                },
                                                "phone": {
                                                    "type": "string",
                                                    "example": "+998901234567"
                                                },
                                                "business_hours": {
                                                    "type": "object"
                                                },
                                                "currency": {
                                                    "type": "string",
                                                    "example": "USD"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Restaurant not found"
                    }
                }
            }
        },
        "/api/v1/users": {
            "get": {
                "tags": [
                    "User Management"
                ],
                "summary": "Get list of users",
                "operationId": "12e989554c281d650dff75443acabf54",
                "parameters": [
                    {
                        "name": "restaurant_id",
                        "in": "query",
                        "description": "Filter by restaurant ID",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "role",
                        "in": "query",
                        "description": "Filter by role",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "restaurant-manager"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by status",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "active",
                                "inactive",
                                "suspended"
                            ],
                            "example": "active"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search by name or email",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "john"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Users retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Users retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "John Doe"
                                                            },
                                                            "email": {
                                                                "type": "string",
                                                                "example": "john@example.com"
                                                            },
                                                            "phone": {
                                                                "type": "string",
                                                                "example": "+998901234567"
                                                            },
                                                            "status": {
                                                                "type": "string",
                                                                "example": "active"
                                                            },
                                                            "restaurant": {
                                                                "type": "object"
                                                            },
                                                            "roles": {
                                                                "type": "array",
                                                                "items": {}
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "User Management"
                ],
                "summary": "Create a new user",
                "operationId": "64da9b5a20fa4f20e947ed61b2bbb6da",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password",
                                    "role"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "+998901234567"
                                    },
                                    "restaurant_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "role": {
                                        "description": "super-admin: ALL roles | admin: restaurant-owner+ | restaurant-owner: staff only",
                                        "type": "string",
                                        "example": "restaurant-manager"
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "active",
                                            "inactive",
                                            "suspended"
                                        ],
                                        "example": "active"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User created successfully"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "403": {
                        "description": "Forbidden - cannot assign this role"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/users/{id}": {
            "get": {
                "tags": [
                    "User Management"
                ],
                "summary": "Get user details",
                "operationId": "a9d321d5dc6bc2613c6cf5ba92b76c89",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "john@example.com"
                                                },
                                                "phone": {
                                                    "type": "string",
                                                    "example": "+998901234567"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "active"
                                                },
                                                "restaurant": {
                                                    "type": "object"
                                                },
                                                "roles": {
                                                    "type": "array",
                                                    "items": {}
                                                },
                                                "permissions": {
                                                    "type": "array",
                                                    "items": {}
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/users/{id}/password": {
            "put": {
                "tags": [
                    "User Management"
                ],
                "summary": "Change user password (admin only)",
                "operationId": "a9035cc3eb0c9155e7c8c6e75f5ccdf2",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "newpassword123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "newpassword123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User password changed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User password changed successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Insufficient permissions"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/users/{id}/roles": {
            "put": {
                "tags": [
                    "User Management"
                ],
                "summary": "Update user roles (super-admin only)",
                "operationId": "218c52a76fefc4f41ff2d08464bb53bc",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "roles"
                                ],
                                "properties": {
                                    "roles": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "example": "restaurant-manager"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User roles updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User roles updated successfully"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Cannot change super admin roles"
                    },
                    "403": {
                        "description": "Only super admin can change user roles"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/users/{id}/status": {
            "put": {
                "tags": [
                    "User Management"
                ],
                "summary": "Update user status (admin/owner only)",
                "operationId": "e2d14707940419a05aaff5b788ccdf54",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "status"
                                ],
                                "properties": {
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "active",
                                            "inactive",
                                            "suspended"
                                        ],
                                        "example": "suspended"
                                    },
                                    "reason": {
                                        "type": "string",
                                        "example": "Violation of company policy"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User status updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User status updated successfully"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Cannot change super admin status"
                    },
                    "403": {
                        "description": "Insufficient permissions to change user status"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/users/roles-permissions": {
            "get": {
                "tags": [
                    "User Management"
                ],
                "summary": "Get available roles and permissions",
                "operationId": "69e7ebca5d8b843fb82c4aec5a5b8534",
                "responses": {
                    "200": {
                        "description": "Available roles retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Available roles retrieved successfully"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Insufficient permissions to view roles"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/restaurants/{restaurant}/users": {
            "get": {
                "tags": [
                    "User Management"
                ],
                "summary": "Get users by restaurant",
                "operationId": "77ade04ff742af693bf8f38293cb40e4",
                "parameters": [
                    {
                        "name": "restaurant",
                        "in": "path",
                        "description": "Restaurant ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Restaurant users retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Restaurant users retrieved successfully"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "securitySchemes": {
            "passport": {
                "type": "oauth2",
                "description": "Laravel passport oauth2 security.",
                "in": "header",
                "scheme": "https",
                "flows": {
                    "password": {
                        "authorizationUrl": "http://localhost/oauth/authorize",
                        "tokenUrl": "http://localhost/oauth/token",
                        "refreshUrl": "http://localhost/token/refresh",
                        "scopes": []
                    }
                }
            },
            "bearerAuth": {
                "type": "http",
                "description": "Enter token in format: Bearer {your-token}",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            },
            "sanctum": {
                "type": "apiKey",
                "description": "Enter token in format (Bearer <token>)",
                "name": "Authorization",
                "in": "header"
            }
        }
    },
    "tags": [
        {
            "name": "Authentication",
            "description": "User authentication and profile management"
        },
        {
            "name": "Restaurants",
            "description": "Restaurant management and information"
        },
        {
            "name": "Categories",
            "description": "Product category management with multilingual support"
        },
        {
            "name": "Menus",
            "description": "Menu management with multi-channel support"
        },
        {
            "name": "Products",
            "description": "Product catalog with multilingual support"
        },
        {
            "name": "Orders",
            "description": "Order management and tracking"
        },
        {
            "name": "User Management",
            "description": "User administration and role management"
        }
    ],
    "security": [
        {
            "passport": []
        }
    ]
}